const express = require('express');
const http = require('http');
const WebSocket = require('ws');
const bodyParser = require('body-parser');

const app = express();
const server = http.createServer(app);
const wss = new WebSocket.Server({ server });

const clients = new Map();

// Use body-parser middleware
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

wss.on('connection', (ws, req) => {
  let clientName = null;

  ws.on('message', (message) => {
    try {
      const data = JSON.parse(message);
      if (data.type === 'register') {
        clientName = data.name;
        clients.set(clientName, ws);
        console.log(`Client registered: ${clientName}`);
      }
    } catch (error) {
      console.error('Error parsing message:', error);
    }
  });

  ws.on('close', () => {
    if (clientName) {
      clients.delete(clientName);
      console.log(`Client disconnected: ${clientName}`);
    }
  });
});

app.post('/send', (req, res) => {
  const { name, message } = req.body;
  const client = clients.get(name);
  
  if (client) {
    client.send(JSON.stringify({ message }));
    res.status(200).send('Message sent');
  } else {
    res.status(404).send('Client not found');
  }
});

const PORT = process.env.PORT || 3000;
server.listen(PORT, () => {
  console.log(`Server is listening on port ${PORT}`);
});
